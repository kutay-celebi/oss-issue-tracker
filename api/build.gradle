buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenLocal()
    }

    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:${dockerPluginVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}

subprojects {

    def gprusr
    def gprkey
    def githubProperties = new Properties()
    def file = rootProject.file("github.properties")
    if (file.exists()) {
        githubProperties.load(new FileInputStream(file))
        gprusr = githubProperties["gprusr"]
        gprkey = githubProperties["gprkey"]
    } else {
        gprusr = System.getenv("GITHUB_USERNAME")
        gprkey = System.getenv("GITHUB_TOKEN")
    }

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'org.springframework.boot'

    apply plugin: "com.bmuschko.docker-spring-boot-application"

    tasks.withType(Javadoc) {
        failOnError false
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url = uri("https://maven.pkg.github.com/kutay-celebi/kuartz-core")
            credentials {
                username = gprusr
                password = gprkey
            }
        }
    }

}